{"ast":null,"code":"export default {\n  data() {\n    return {\n      landHolding: {\n        name: '',\n        legalEntity: '',\n        netMineralAcres: '',\n        mineralOwnerRoyalty: '',\n        sectionName: '',\n        titleSource: 'Class A'\n      }\n    };\n  },\n  created() {\n    this.fetchLandHolding();\n  },\n  methods: {\n    fetchLandHolding() {\n      const id = this.$route.params.id;\n      fetch(`/api/landholdings/${id}`).then(response => response.json()).then(data => {\n        this.landHolding = data;\n      }).catch(error => {\n        console.error('Error fetching land holding:', error);\n      });\n    },\n    updateLandHolding() {\n      const id = this.$route.params.id;\n      fetch(`/api/landholdings/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.landHolding)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to update land holding');\n        }\n        this.$router.push('/landholdings');\n      }).catch(error => {\n        console.error('Error updating land holding:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","landHolding","name","legalEntity","netMineralAcres","mineralOwnerRoyalty","sectionName","titleSource","created","fetchLandHolding","methods","id","$route","params","fetch","then","response","json","catch","error","console","updateLandHolding","method","headers","body","JSON","stringify","ok","Error","$router","push"],"sources":["src/views/LandHoldingDetails.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>Land Holding Details</h2>\n    <form @submit.prevent=\"updateLandHolding\">\n      <div>\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" v-model=\"landHolding.name\" required />\n      </div>\n      <div>\n        <label for=\"legalEntity\">Legal Entity:</label>\n        <input type=\"text\" id=\"legalEntity\" v-model=\"landHolding.legalEntity\" required />\n      </div>\n      <div>\n        <label for=\"netMineralAcres\">Net Mineral Acres:</label>\n        <input type=\"number\" id=\"netMineralAcres\" v-model=\"landHolding.netMineralAcres\" required />\n      </div>\n      <div>\n        <label for=\"mineralOwnerRoyalty\">Mineral Owner Royalty (%):</label>\n        <input type=\"number\" id=\"mineralOwnerRoyalty\" v-model=\"landHolding.mineralOwnerRoyalty\" required />\n      </div>\n      <div>\n        <label for=\"sectionName\">Section Name:</label>\n        <input type=\"text\" id=\"sectionName\" v-model=\"landHolding.sectionName\" required />\n      </div>\n      <div>\n        <label for=\"titleSource\">Title Source:</label>\n        <select id=\"titleSource\" v-model=\"landHolding.titleSource\" required>\n          <option value=\"Class A\">Class A</option>\n          <option value=\"Class B\">Class B</option>\n          <option value=\"Class C\">Class C</option>\n          <option value=\"Class D\">Class D</option>\n        </select>\n      </div>\n      <button type=\"submit\">Update Land Holding</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      landHolding: {\n        name: '',\n        legalEntity: '',\n        netMineralAcres: '',\n        mineralOwnerRoyalty: '',\n        sectionName: '',\n        titleSource: 'Class A',\n      },\n    };\n  },\n  created() {\n    this.fetchLandHolding();\n  },\n  methods: {\n    fetchLandHolding() {\n      const id = this.$route.params.id;\n      fetch(`/api/landholdings/${id}`)\n        .then((response) => response.json())\n        .then((data) => {\n          this.landHolding = data;\n        })\n        .catch((error) => {\n          console.error('Error fetching land holding:', error);\n        });\n    },\n    updateLandHolding() {\n      const id = this.$route.params.id;\n      fetch(`/api/landholdings/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(this.landHolding),\n      })\n        .then((response) => {\n          if (!response.ok) {\n            throw new Error('Failed to update land holding');\n          }\n          this.$router.push('/landholdings');\n        })\n        .catch((error) => {\n          console.error('Error updating land holding:', error);\n        });\n    },\n  },\n};\n</script>\n"],"mappings":"AAuCA;EACAA,KAAA;IACA;MACAC,WAAA;QACAC,IAAA;QACAC,WAAA;QACAC,eAAA;QACAC,mBAAA;QACAC,WAAA;QACAC,WAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACAD,iBAAA;MACA,MAAAE,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;MACAG,KAAA,sBAAAH,EAAA,IACAI,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAf,IAAA;QACA,KAAAC,WAAA,GAAAD,IAAA;MACA,GACAkB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;MACA;IACA;IACAE,kBAAA;MACA,MAAAV,EAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAF,EAAA;MACAG,KAAA,sBAAAH,EAAA;QACAW,MAAA;QACAC,OAAA;UACA;QACA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,MAAAzB,WAAA;MACA,GACAc,IAAA,CAAAC,QAAA;QACA,KAAAA,QAAA,CAAAW,EAAA;UACA,UAAAC,KAAA;QACA;QACA,KAAAC,OAAA,CAAAC,IAAA;MACA,GACAZ,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}